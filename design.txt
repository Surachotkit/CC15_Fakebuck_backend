Register
POST /auth/Register
BODY firstName, lastName, emailOrMobile, password, confirmPassword  // emailOrMobile ต้องเขียนฟังชั่นแยกให้ออกว่าอันไหน email อันไหน mobile
Response
201 { accessToken: String, user: {id: Number, firstName: String} }  // ล็อคอินเสร็จแล้วให้ทำอะไรต่อ / อัตโนมัติ / เด้งไป OTP 
400 { message: String, emailExist: true }
500 { message: String }

LOGIN
POST /auth/LOGIN
BODY emailOrMobile, password  // **validate ก่อน ถ้าไม่ส่งค่ามา ให้ error ไป 
Response
200 { accessToken: String, user: { id: Number, firstName: String } }  // ล็อคอินเสร็จแล้วให้ทำอะไรต่อ / อัตโนมัติ / เด้งไป OTP 
400 { message: String }
500 { message: String }


GET Authenticated user
GET /auth/me
HEADER Authorization Bearer ACCESS_TOKEN   // ACCESS_TOKEN ส่งมาจาก Header
Response 
200 { user: { id: Number, firstName: String } }
401 { message: String }
500 { message: String }


UPDATE PROFILE / COVER IMAGE
PATCH /user
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
BODY profileImage?, coverImage?       *มีอย่างใดอย่างหนึ่ง มีพร้อมกันไม่ได้
Response
200 { profileImage?: String, coverImage?: String }
400 { message : String }
401 { message : String }
500 { message : String }
--------------------------------------------------------------------

GET USER PROFILE BY id
GET /user/:userId
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
Response
200 { user: { id: Number, firstName: String...} }
    status: String,
    friend: [ {id: Number, firstName: String, ...}]
401 { message : String }
500 { message : String }

----------------------------------------------------------------------

REQUEST FRIEND
POST /friend/:receiverId
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
Response
200 { message : String }
400 { message : String }
401 { message : String }
500 { message : String }

----------------------------------------------------------------------
REJECT FRIEND
DELETE /friend/:requestId/reject
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
Response
200 { message : String }
400 { message : String }
401 { message : String }
500 { message : String }

CANCEL REQUEST
DELETE /friend/:requestId/cancel
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
Response
200 { message : String }
400 { message : String }
401 { message : String }
500 { message : String }

UNFRIEND
DELETE /friend/:friendId/unfriend
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
Response
200 { message : String }
400 { message : String }
401 { message : String }
500 { message : String }

--------------------------------------------------------------------
ACCEPT FRIEND 
PATCH / friend/:requesterId
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
Response
200 { message : String }
400 { message : String }
401 { message : String }
500 { message : String }